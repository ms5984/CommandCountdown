##
#  Copyright 2021 ms5984 (Matt) <https://github.com/ms5984>
#
#  This file is part of CommandCountdown.
#
#  CommandCountdown is free software: you can redistribute it and/or
#  modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation, either version 3 of the
#  License, or (at your option) any later version.
#
#  CommandCountdown is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
##

##### Settings #####
# Should arguments be treated with case sensitivity? This should stay false in most cases
args-case-sensitive: false

# Should we manually process commands for players and keep original count on failures?
## This feature prevents counts from incrementing when a command fails for a player.
## It uses the boolean result of Command#execute, which might not return false in all
## types of "failure" (no permissions, etc). If you want EVERY potential command execution
## to be counted against the player, set this to false.
keep-count-on-failure: true

# Should limits with fewer args than given also match?
# ### Warning: false not fully implemented at the moment.###
## This setting decides whether not the counters and commands run match like the following:
## -rule: cmd='auctionhouse:ah' args:[sell]
## -cmd1: /ah sell 10 5 # true = match
## -cmd2: /ah sell 10 5 # false = won't match
match-all-args: true

default-limits:
  ### Config example!
#  "auctionhouse:ah":
#    args: ["sell", "*"]
#    limit: 5
  ### This is how CommandCountdown stores a default limit entry.
  # Note: you can specify the prefix of a plugin in case multiple define the same alias.
  # This is not required but is available as a convenience.
  # the wildcard "*" matches ANY further input (including third, forth argument)

  ### Simple example
#  sethome:
#    args: []
#    limit: 1
  ### This would limit players to run /sethome *once*
  # Things to note:
  # * Empty args list = only blocking the no-args base command.
  #   If any arguments are provided the command will not be blocked.